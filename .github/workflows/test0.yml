name: PR Title Checker

on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths-ignore:
      - '.github/**'
  issue_comment:
    types: [created]

jobs:
  check-version:
    if: github.event.pull_request.merged == true || startsWith(github.event.comment.body, '/retry-workflow')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: git fetch --tags

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "0.0.0")
          echo "Latest tag: $latest_tag"
          echo "::set-output name=latest_tag::$latest_tag"

      - name: Extract version from build.gradle
        id: extract_version
        run: |
          version=$(grep '^version' build.gradle | sed 's/version[[:space:]]*=[[:space:]]*//;s/"//g')
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "Build.gradle version: $version"

      - name: Compare versions
        run: |
          latest_tag="${{ steps.get_latest_tag.outputs.latest_tag }}"
          current_version="${{ env.VERSION }}"

          IFS='.' read -r -a latest_parts <<< "$latest_tag"
          IFS='.' read -r -a current_parts <<< "$current_version"

          latest_major=${latest_parts[0]}
          latest_minor=${latest_parts[1]}
          latest_patch=${latest_parts[2]}

          current_major=${current_parts[0]}
          current_minor=${current_parts[1]}
          current_patch=${current_parts[2]}

          major_diff=$((current_major - latest_major))
          minor_diff=$((current_minor - latest_minor))
          patch_diff=$((current_patch - latest_patch))

          echo "Latest version: $latest_major.$latest_minor.$latest_patch"
          echo "Current version: $current_major.$current_minor.$current_patch"

          if [ "$major_diff" -gt 1 ] || [ "$major_diff" -lt 0 ]; then
            echo "Major version can only be incremented by 1."
            exit 1
          fi

          if [ "$major_diff" -eq 1 ]; then
            if [ "$current_minor" -ne 0 ] || [ "$current_patch" -ne 0 ]; then
              echo "When incrementing major version, minor and patch versions must be reset to 0."
              exit 1
            fi
          fi

          if [ "$minor_diff" -gt 1 ] || [ "$minor_diff" -lt 0 ]; then
            echo "Minor version can only be incremented by 1."
            exit 1
          fi

          if [ "$minor_diff" -eq 1 ]; then
            if [ "$current_patch" -ne 0 ]; then
              echo "When incrementing minor version, patch version must be reset to 0."
              exit 1
            fi
          fi

          if [ "$patch_diff" -gt 1 ] || [ "$patch_diff" -lt 0 ]; then
            echo "Patch version can only be incremented by 1."
            exit 1
          fi

          echo "Version increment is valid."
